---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  releaseName: longhorn
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.4.2
      sourceRef:
        kind: HelmRepository
        name: longhorn-charts
        namespace: flux-system
      interval: 5m
  values:
    persistence:
      defaultClass: true
      defaultClassReplicaCount: 3
      reclaimPolicy: Retain
    defaultSettings:
      # backupTarget: s3://longhorn-backup@us-east-2/
      # backupTargetCredentialSecret: longhorn-s3-backups-secrets
      # backupstorePollInterval: 300
      defaultReplicaCount: 3
      defaultLonghornStaticStorageClass: longhorn
      createDefaultDiskLabeledNodes: true
      defaultDataLocality: best-effort
      nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod
      concurrentAutomaticEngineUpgradePerNodeLimit: 1
      replicaSoftAntiAffinity: false
      storageMinimalAvailablePercentage: 10
      storageOverProvisioningPercentage: "200%"
      upgradeChecker: false
      priorityClass: high-priority
      autoSalvage: true
      autoDeletePodWhenVolumeDetachedUnexpectedly: true
      disableSchedulingOnCordonedNode: true
      replicaZoneSoftAntiAffinity: false
      volumeAttachmentRecoveryPolicy: "wait"
      mkfsExt4Parameters: -O ^64bit,^metadata_csum
      replicaReplenishmentWaitInterval: 300
      allowVolumeCreationWithDegradedAvailability: true
      guaranteedEngineManagerCPU: 8
      guaranteedReplicaManagerCPU: 8
    ingress:
      enabled: true
      host: "longhorn.${SECRET_DOMAIN}"
      path: /
      tls: true
      tlsSecret: longhorn-tls
      annotations:
        coredns.io/hostname: "longhorn.${SECRET_DOMAIN}"
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        external-dns/is-public: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-forward-auth@kubernetescrd"
        kubernetes.io/ingress.class: "traefik"
        hajimari.io/enable: "true"
        hajimari.io/icon: "file-table-box"
        hajimari.io/group: "storage"
        hajimari.io/appName: "longhorn"
    longhornManager:
      priorityClass: system-node-critical
    longhornDriver:
      priorityClass: system-node-critical
      tolerations:
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          # Evict pods from the node if the node becomes unreachable after this toleration timer expires.
          tolerationSeconds: 15
    longhornUI:
      tolerations:
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          # Evict pods from the node if the node becomes unreachable after this toleration timer expires.
          tolerationSeconds: 15
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 250m
        memory: 500Mi
